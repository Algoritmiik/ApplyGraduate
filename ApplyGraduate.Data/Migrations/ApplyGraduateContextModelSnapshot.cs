// <auto-generated />
using System;
using ApplyGraduate.Data.Concrete.EntityFramework.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ApplyGraduate.Data.Migrations
{
    [DbContext(typeof(ApplyGraduateContext))]
    partial class ApplyGraduateContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ApplyGraduate.Entities.Concrete.Companion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DidJoin")
                        .HasColumnType("bit");

                    b.Property<string>("HesCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.ToTable("Companions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2022, 3, 21, 15, 18, 48, 215, DateTimeKind.Local).AddTicks(4051),
                            DidJoin = false,
                            HesCode = "A1B2C3D4F5",
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2022, 3, 21, 15, 18, 48, 215, DateTimeKind.Local).AddTicks(4052),
                            Name = "Samet",
                            PhoneNumber = "5424173626",
                            StudentId = 1,
                            Surname = "Aslan"
                        });
                });

            modelBuilder.Entity("ApplyGraduate.Entities.Concrete.Dates", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("GraduationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("RegisterBeginningDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("RegisterEndingDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Dates");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2022, 3, 21, 15, 18, 48, 216, DateTimeKind.Local).AddTicks(9027),
                            GraduationDate = new DateTime(2022, 3, 31, 15, 18, 48, 216, DateTimeKind.Local).AddTicks(9010),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2022, 3, 21, 15, 18, 48, 216, DateTimeKind.Local).AddTicks(9028),
                            RegisterBeginningDate = new DateTime(2022, 3, 21, 15, 18, 48, 216, DateTimeKind.Local).AddTicks(9009),
                            RegisterEndingDate = new DateTime(2022, 3, 21, 15, 18, 48, 216, DateTimeKind.Local).AddTicks(9009)
                        });
                });

            modelBuilder.Entity("ApplyGraduate.Entities.Concrete.Faculty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Faculties");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2022, 3, 21, 15, 18, 48, 215, DateTimeKind.Local).AddTicks(4654),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2022, 3, 21, 15, 18, 48, 215, DateTimeKind.Local).AddTicks(4654),
                            Name = "Hukuk"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2022, 3, 21, 15, 18, 48, 215, DateTimeKind.Local).AddTicks(4657),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2022, 3, 21, 15, 18, 48, 215, DateTimeKind.Local).AddTicks(4657),
                            Name = "Mühendislik"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2022, 3, 21, 15, 18, 48, 215, DateTimeKind.Local).AddTicks(4659),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2022, 3, 21, 15, 18, 48, 215, DateTimeKind.Local).AddTicks(4659),
                            Name = "Tıp Fakültesi"
                        });
                });

            modelBuilder.Entity("ApplyGraduate.Entities.Concrete.GownSize", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.HasKey("Id");

                    b.ToTable("GownSize");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2022, 3, 21, 15, 18, 48, 216, DateTimeKind.Local).AddTicks(2882),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2022, 3, 21, 15, 18, 48, 216, DateTimeKind.Local).AddTicks(2883),
                            Size = "XS"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2022, 3, 21, 15, 18, 48, 216, DateTimeKind.Local).AddTicks(2885),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2022, 3, 21, 15, 18, 48, 216, DateTimeKind.Local).AddTicks(2885),
                            Size = "S"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2022, 3, 21, 15, 18, 48, 216, DateTimeKind.Local).AddTicks(2887),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2022, 3, 21, 15, 18, 48, 216, DateTimeKind.Local).AddTicks(2887),
                            Size = "M"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2022, 3, 21, 15, 18, 48, 216, DateTimeKind.Local).AddTicks(2888),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2022, 3, 21, 15, 18, 48, 216, DateTimeKind.Local).AddTicks(2889),
                            Size = "L"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2022, 3, 21, 15, 18, 48, 216, DateTimeKind.Local).AddTicks(2890),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2022, 3, 21, 15, 18, 48, 216, DateTimeKind.Local).AddTicks(2891),
                            Size = "XL"
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2022, 3, 21, 15, 18, 48, 216, DateTimeKind.Local).AddTicks(2892),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2022, 3, 21, 15, 18, 48, 216, DateTimeKind.Local).AddTicks(2892),
                            Size = "XXL"
                        });
                });

            modelBuilder.Entity("ApplyGraduate.Entities.Concrete.Program", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UnitId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UnitId");

                    b.ToTable("Program");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2022, 3, 21, 15, 18, 48, 215, DateTimeKind.Local).AddTicks(7649),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2022, 3, 21, 15, 18, 48, 215, DateTimeKind.Local).AddTicks(7649),
                            Name = "Hukuk",
                            UnitId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2022, 3, 21, 15, 18, 48, 215, DateTimeKind.Local).AddTicks(7651),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2022, 3, 21, 15, 18, 48, 215, DateTimeKind.Local).AddTicks(7652),
                            Name = "Bilgisayar Mühendisliği",
                            UnitId = 2
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2022, 3, 21, 15, 18, 48, 215, DateTimeKind.Local).AddTicks(7653),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2022, 3, 21, 15, 18, 48, 215, DateTimeKind.Local).AddTicks(7653),
                            Name = "Makine Mühendisliği",
                            UnitId = 3
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2022, 3, 21, 15, 18, 48, 215, DateTimeKind.Local).AddTicks(7655),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2022, 3, 21, 15, 18, 48, 215, DateTimeKind.Local).AddTicks(7656),
                            Name = "İnşaat Mühendisliği",
                            UnitId = 4
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2022, 3, 21, 15, 18, 48, 215, DateTimeKind.Local).AddTicks(7657),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2022, 3, 21, 15, 18, 48, 215, DateTimeKind.Local).AddTicks(7657),
                            Name = "Tıp",
                            UnitId = 5
                        });
                });

            modelBuilder.Entity("ApplyGraduate.Entities.Concrete.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("ApplyGraduate.Entities.Concrete.RoleClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("ApplyGraduate.Entities.Concrete.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("CompanionStatus")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DidJoin")
                        .HasColumnType("bit");

                    b.Property<bool>("DidPaid")
                        .HasColumnType("bit");

                    b.Property<bool>("DidTake")
                        .HasColumnType("bit");

                    b.Property<bool>("GownRequest")
                        .HasColumnType("bit");

                    b.Property<string>("GownSize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HaveApplied")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Note")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("ProgramId")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ProgramId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CompanionStatus = false,
                            CreatedDate = new DateTime(2022, 3, 21, 15, 18, 48, 215, DateTimeKind.Local).AddTicks(2124),
                            DidJoin = false,
                            DidPaid = false,
                            DidTake = false,
                            GownRequest = false,
                            HaveApplied = false,
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2022, 3, 21, 15, 18, 48, 215, DateTimeKind.Local).AddTicks(2124),
                            Name = "Mert",
                            ProgramId = 2,
                            Surname = "Aslan"
                        },
                        new
                        {
                            Id = 2,
                            CompanionStatus = false,
                            CreatedDate = new DateTime(2022, 3, 21, 15, 18, 48, 215, DateTimeKind.Local).AddTicks(2128),
                            DidJoin = false,
                            DidPaid = false,
                            DidTake = false,
                            GownRequest = false,
                            HaveApplied = false,
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2022, 3, 21, 15, 18, 48, 215, DateTimeKind.Local).AddTicks(2128),
                            Name = "Recep",
                            ProgramId = 1,
                            Surname = "Yayla"
                        },
                        new
                        {
                            Id = 3,
                            CompanionStatus = false,
                            CreatedDate = new DateTime(2022, 3, 21, 15, 18, 48, 215, DateTimeKind.Local).AddTicks(2130),
                            DidJoin = false,
                            DidPaid = false,
                            DidTake = false,
                            GownRequest = false,
                            HaveApplied = false,
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2022, 3, 21, 15, 18, 48, 215, DateTimeKind.Local).AddTicks(2131),
                            Name = "Cihan",
                            ProgramId = 1,
                            Surname = "Eyuboglu"
                        },
                        new
                        {
                            Id = 4,
                            CompanionStatus = false,
                            CreatedDate = new DateTime(2022, 3, 21, 15, 18, 48, 215, DateTimeKind.Local).AddTicks(2133),
                            DidJoin = false,
                            DidPaid = false,
                            DidTake = false,
                            GownRequest = false,
                            HaveApplied = false,
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2022, 3, 21, 15, 18, 48, 215, DateTimeKind.Local).AddTicks(2133),
                            Name = "Berk",
                            ProgramId = 3,
                            Surname = "Kayatepe"
                        },
                        new
                        {
                            Id = 5,
                            CompanionStatus = false,
                            CreatedDate = new DateTime(2022, 3, 21, 15, 18, 48, 215, DateTimeKind.Local).AddTicks(2135),
                            DidJoin = false,
                            DidPaid = false,
                            DidTake = false,
                            GownRequest = false,
                            HaveApplied = false,
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2022, 3, 21, 15, 18, 48, 215, DateTimeKind.Local).AddTicks(2136),
                            Name = "Muhammed",
                            ProgramId = 5,
                            Surname = "Cınıslı"
                        });
                });

            modelBuilder.Entity("ApplyGraduate.Entities.Concrete.Unit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FacultyId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("FacultyId");

                    b.ToTable("Units");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2022, 3, 21, 15, 18, 48, 215, DateTimeKind.Local).AddTicks(6161),
                            FacultyId = 1,
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2022, 3, 21, 15, 18, 48, 215, DateTimeKind.Local).AddTicks(6161),
                            Name = "Hukuk"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2022, 3, 21, 15, 18, 48, 215, DateTimeKind.Local).AddTicks(6163),
                            FacultyId = 2,
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2022, 3, 21, 15, 18, 48, 215, DateTimeKind.Local).AddTicks(6164),
                            Name = "Bilgisayar Mühendisliği"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2022, 3, 21, 15, 18, 48, 215, DateTimeKind.Local).AddTicks(6165),
                            FacultyId = 2,
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2022, 3, 21, 15, 18, 48, 215, DateTimeKind.Local).AddTicks(6166),
                            Name = "Makine Mühendisliği"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2022, 3, 21, 15, 18, 48, 215, DateTimeKind.Local).AddTicks(6167),
                            FacultyId = 2,
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2022, 3, 21, 15, 18, 48, 215, DateTimeKind.Local).AddTicks(6168),
                            Name = "İnşaat Mühendisliği"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2022, 3, 21, 15, 18, 48, 215, DateTimeKind.Local).AddTicks(6169),
                            FacultyId = 3,
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2022, 3, 21, 15, 18, 48, 215, DateTimeKind.Local).AddTicks(6169),
                            Name = "Tıp"
                        });
                });

            modelBuilder.Entity("ApplyGraduate.Entities.Concrete.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("ApplyGraduate.Entities.Concrete.UserClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("ApplyGraduate.Entities.Concrete.UserLogin", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("ApplyGraduate.Entities.Concrete.UserRole", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("ApplyGraduate.Entities.Concrete.UserToken", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("ApplyGraduate.Entities.Concrete.Companion", b =>
                {
                    b.HasOne("ApplyGraduate.Entities.Concrete.Student", "Student")
                        .WithMany("Companions")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("ApplyGraduate.Entities.Concrete.Program", b =>
                {
                    b.HasOne("ApplyGraduate.Entities.Concrete.Unit", "Unit")
                        .WithMany("Programs")
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("ApplyGraduate.Entities.Concrete.RoleClaim", b =>
                {
                    b.HasOne("ApplyGraduate.Entities.Concrete.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ApplyGraduate.Entities.Concrete.Student", b =>
                {
                    b.HasOne("ApplyGraduate.Entities.Concrete.Program", "Program")
                        .WithMany("Students")
                        .HasForeignKey("ProgramId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Program");
                });

            modelBuilder.Entity("ApplyGraduate.Entities.Concrete.Unit", b =>
                {
                    b.HasOne("ApplyGraduate.Entities.Concrete.Faculty", "Faculty")
                        .WithMany("Units")
                        .HasForeignKey("FacultyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Faculty");
                });

            modelBuilder.Entity("ApplyGraduate.Entities.Concrete.UserClaim", b =>
                {
                    b.HasOne("ApplyGraduate.Entities.Concrete.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ApplyGraduate.Entities.Concrete.UserLogin", b =>
                {
                    b.HasOne("ApplyGraduate.Entities.Concrete.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ApplyGraduate.Entities.Concrete.UserRole", b =>
                {
                    b.HasOne("ApplyGraduate.Entities.Concrete.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApplyGraduate.Entities.Concrete.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ApplyGraduate.Entities.Concrete.UserToken", b =>
                {
                    b.HasOne("ApplyGraduate.Entities.Concrete.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ApplyGraduate.Entities.Concrete.Faculty", b =>
                {
                    b.Navigation("Units");
                });

            modelBuilder.Entity("ApplyGraduate.Entities.Concrete.Program", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("ApplyGraduate.Entities.Concrete.Student", b =>
                {
                    b.Navigation("Companions");
                });

            modelBuilder.Entity("ApplyGraduate.Entities.Concrete.Unit", b =>
                {
                    b.Navigation("Programs");
                });
#pragma warning restore 612, 618
        }
    }
}
